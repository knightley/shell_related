bash脚本的set命令，参见：http://www.ruanyifeng.com/blog/2017/11/bash-set.html

1. set -u 与 set -o nounset 等价. 在bash脚本的头部加上它，遇到不存在的变量就会报错，并停止执行.
2. set -x 与 set -o xtrace 等价. 默认情况下，bash脚本执行后，屏幕上只显示运行结果，没有其他内容。如果多个命令连续执行，它们的运行结果就会连续输出。有时会分不清，某一段内容是什么命令产生的。set -x 用来在运行结果之前，先输出执行的那一行命令。打印出的命令行，行首以+表示。这对于调试复杂的脚本是很有用的。
3. set -e 与set -o errexit 等价. 它使脚本只要发生错误，就终止执行。set -x 根据返回值来判断，一个命令是否运行失败。但是，某些命令的非零返回值可能不表示失败，或者开发者希望在命令失败的情况下，脚本继续执行下去。这是可以暂时关闭set -x，该命令执行结束后，再重新打开set -e. set +e 表示关闭 -e 选项，set -e 表示重新打开 -e 选项。当然还有其他的方式，可以参见ruanyifeng的bash set文档。
4. set -o pipefail. set -e 有一个例外情况，就是不适用于管道命令。 所谓管道命令，就是多个子命令通过管道运算符（|）组合成为一个大的命令。Bash会把最后一个字命令的返回值，作为整个命令的返回值。也就是说，只要最后一个子命令不失败，管道命令总是会执行成功，因此它后面命令依然会执行，set -e 就失效了。set -o pipefail 用来解决这个问题，只要一个子命令失败，整个管道命令就失败，脚本就会终止执行。
总结：
set命令的上面这四个参数，一般都放在一起使用。
#写法1:
set -euxo pipefail
#写法2:
set -eux
set -o pipefail
这两种写法建议放在所有Bash脚本的头部。
另一种办法是在执行Bash脚本的时候，从命令行传入这些参数。
$ bash -euxo pipefail script.sh
